<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd"
       default-init-method="init"
       default-destroy-method="destroy">

    <!--Bean 定义模板，类似于抽象接口 属性必须被继承，被实例化-->
    <bean id="beanTemplate" abstract="true">
        <property name="message1" value="Hello Temple!"/>
    </bean>

    <bean id="helloWorld" class="com.liucan.ioc.pojo.HelloWorld"
          scope="prototype" init-method="init" parent="beanTemplate">
        <property name="message2" value="Hello World! message2"/>
    </bean>

    <bean id="helloIndia" class="com.liucan.ioc.pojo.HelloIndia" parent="beanTemplate">
        <property name="message2" value="Hello India!"/>
        <property name="message3" value="Namaste India!"/>
    </bean>

    <bean id="helloIndia1" class="com.liucan.ioc.pojo.HelloIndia" parent="beanTemplate">
        <property name="message2" value="Hello India1!"/>
        <property name="message3" value="Namaste India1!"/>
    </bean>

    <bean id="helloChina" class="com.liucan.ioc.pojo.HelloChina" parent="beanTemplate">
        <property name="message2" value="Hello China!"/>
    </bean>

    <!--di-->
    <bean id="textEditor" class="com.liucan.ioc.pojo.TextEditor" autowire="byName">
        <!--基于构造函数注入-->
        <constructor-arg index="0" ref="spellChecker"/>
        <constructor-arg index="1" value="hello"/>

        <!--基于setter注入-->
        <property name="helloWorld" ref="helloWorld"/>

        <!--内部bean和内部类类似-->
        <property name="helloIndia">
            <bean id="helloIndia" class="com.liucan.ioc.pojo.HelloIndia"/>
        </property>

        <!--可以通过autowire="byName"byType"自动注入
        <property name="helloChina" ref="helloChina"/>
        -->
    </bean>

    <bean id="spellChecker" class="com.liucan.ioc.pojo.SpellChecker">
    </bean>

    <!--注入集合list,set,map,properties-->
    <bean id="collectionBean" class="com.liucan.ioc.pojo.CollectionBean">
        <property name="addressList">
            <list>
                <value>INDIA</value>
                <!--注入Bean引用
                <ref bean="address1"/>
                -->
            </list>
        </property>
        <property name="addressSet">
            <set>
                <value>INDIA</value>
            </set>
        </property>
        <property name="addressMap">
            <map>
                <entry key="1" value="INDIA"/>
            </map>
        </property>
        <property name="addressProp">
            <props>
                <prop key="one">INDIA</prop>
            </props>
        </property>
    </bean>

    <!--配置注解，开启注解-->
    <context:annotation-config/>

    <bean id="annotation" class="com.liucan.ioc.annottion.Annotation"/>

    <!--spring 事件-->
    <bean id="contextStartEventHandler" class="com.liucan.ioc.springevent.listener.ContextStartEventListener"/>
    <bean id="contextStopEventHandler" class="com.liucan.ioc.springevent.listener.ContextStopEventListener"/>

    <!--spring自定义事件-->
    <bean id="customEventHandler" class="com.liucan.ioc.springevent.listener.CustomEventListener"/>
    <bean id="customEventPublisher" class="com.liucan.ioc.springevent.publisher.EventPublisher"/>
</beans>