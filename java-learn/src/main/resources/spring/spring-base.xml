<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 引入mysql.properties属性文件 -->
    <context:property-placeholder location="classpath:db/mysql.properties" />

    <!-- spring自动去扫描base-pack下面或者子包下面的Java文件
     扫描到有@Component @Controller@Service等这些注解的类，则把这些类注册为bean
     注意：
     如果配置了<context:component-scan>那么<context:annotation-config/>标签（开启注解）
     就可以不用再xml中配置了，因为前者包含了后者  -->
    <context:component-scan base-package="com.liucan.*"/>

    <!-- 配置注解驱动 -->
    <mvc:annotation-driven/>

    <!--声明@AspectJ 支持是可用的-->
    <aop:aspectj-autoproxy/>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter" />
            </list>
        </property>
    </bean>
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" >
        <property name="order" value="0" />
    </bean>

</beans>